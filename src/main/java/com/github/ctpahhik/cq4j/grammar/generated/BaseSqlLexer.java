// Generated from BaseSql.g4 by ANTLR 4.1
package com.github.ctpahhik.cq4j.grammar.generated;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class BaseSqlLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		PLUS=1, MINUS=2, STAR=3, DIV=4, MOD=5, AND=6, OR=7, AS=8, BETWEEN=9, NOT=10, 
		NULL=11, IN=12, IS=13, L_PAREN=14, R_PAREN=15, COMA=16, LT_EQ=17, LT=18, 
		GT_EQ=19, GT=20, EQ=21, NOT_EQ=22, SELECT=23, FROM=24, JOIN=25, WHERE=26, 
		ORDER=27, GROUP=28, BY=29, ASC=30, DESC=31, CASE=32, WHEN=33, THEN=34, 
		ELSE=35, END=36, INNER=37, OUTER=38, CROSS=39, LEFT=40, RIGHT=41, FULL=42, 
		ON=43, BOOLEAN=44, ID=45, INT=46, FLOAT=47, STRING=48, WS=49;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'+'", "'-'", "'*'", "'/'", "'%'", "'and'", "'or'", "'as'", "'between'", 
		"'not'", "'null'", "'in'", "'is'", "'('", "')'", "','", "LT_EQ", "'<'", 
		"GT_EQ", "'>'", "'='", "NOT_EQ", "'select'", "'from'", "'join'", "'where'", 
		"'order'", "'group'", "'by'", "'asc'", "'desc'", "'case'", "'when'", "'then'", 
		"'else'", "'end'", "'inner'", "'outer'", "'cross'", "'left'", "'right'", 
		"'full'", "'on'", "BOOLEAN", "ID", "INT", "FLOAT", "STRING", "WS"
	};
	public static final String[] ruleNames = {
		"PLUS", "MINUS", "STAR", "DIV", "MOD", "AND", "OR", "AS", "BETWEEN", "NOT", 
		"NULL", "IN", "IS", "L_PAREN", "R_PAREN", "COMA", "LT_EQ", "LT", "GT_EQ", 
		"GT", "EQ", "NOT_EQ", "SELECT", "FROM", "JOIN", "WHERE", "ORDER", "GROUP", 
		"BY", "ASC", "DESC", "CASE", "WHEN", "THEN", "ELSE", "END", "INNER", "OUTER", 
		"CROSS", "LEFT", "RIGHT", "FULL", "ON", "BOOLEAN", "ID", "INT", "FLOAT", 
		"STRING", "WS", "EXPONENT", "HEX_DIGIT", "ESC_SEQ", "OCTAL_ESC", "UNICODE_ESC"
	};


	public BaseSqlLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "BaseSql.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 48: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2\63\u0199\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3"+
		"\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n"+
		"\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16"+
		"\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\22\5\22\u00a5\n\22"+
		"\3\23\3\23\3\24\3\24\3\24\3\24\5\24\u00ad\n\24\3\25\3\25\3\26\3\26\3\27"+
		"\3\27\3\27\3\27\5\27\u00b7\n\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31"+
		"\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33"+
		"\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\36"+
		"\3\36\3\36\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3\"\3\"\3"+
		"\"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3%\3%\3%\3%\3&\3&\3&\3&\3&\3"+
		"&\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3*\3*\3*\3"+
		"*\3*\3*\3+\3+\3+\3+\3+\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\5-\u012e\n"+
		"-\3.\3.\7.\u0132\n.\f.\16.\u0135\13.\3/\6/\u0138\n/\r/\16/\u0139\3\60"+
		"\6\60\u013d\n\60\r\60\16\60\u013e\3\60\3\60\7\60\u0143\n\60\f\60\16\60"+
		"\u0146\13\60\3\60\5\60\u0149\n\60\3\60\3\60\6\60\u014d\n\60\r\60\16\60"+
		"\u014e\3\60\5\60\u0152\n\60\3\60\6\60\u0155\n\60\r\60\16\60\u0156\3\60"+
		"\5\60\u015a\n\60\3\61\3\61\3\61\7\61\u015f\n\61\f\61\16\61\u0162\13\61"+
		"\3\61\3\61\3\61\3\61\7\61\u0168\n\61\f\61\16\61\u016b\13\61\3\61\5\61"+
		"\u016e\n\61\3\62\6\62\u0171\n\62\r\62\16\62\u0172\3\62\3\62\3\63\3\63"+
		"\5\63\u0179\n\63\3\63\6\63\u017c\n\63\r\63\16\63\u017d\3\64\3\64\3\65"+
		"\3\65\3\65\3\65\5\65\u0186\n\65\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\66"+
		"\3\66\5\66\u0191\n\66\3\67\3\67\3\67\3\67\3\67\3\67\3\67\28\3\3\1\5\4"+
		"\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16"+
		"\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1"+
		"/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$"+
		"\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1Y.\1[/\1]\60\1_\61\1a\62\1c\63"+
		"\2e\2\1g\2\1i\2\1k\2\1m\2\1\3\2\13\5\2C\\aac|\6\2\62;C\\aac|\4\2$$^^\4"+
		"\2))^^\5\2\13\f\17\17\"\"\4\2GGgg\4\2--//\5\2\62;CHch\n\2$$))^^ddhhpp"+
		"ttvv\u01ad\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2"+
		"\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27"+
		"\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2"+
		"\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2"+
		"\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2"+
		"\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2"+
		"\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S"+
		"\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2"+
		"\2\2\2a\3\2\2\2\2c\3\2\2\2\3o\3\2\2\2\5q\3\2\2\2\7s\3\2\2\2\tu\3\2\2\2"+
		"\13w\3\2\2\2\ry\3\2\2\2\17}\3\2\2\2\21\u0080\3\2\2\2\23\u0083\3\2\2\2"+
		"\25\u008b\3\2\2\2\27\u008f\3\2\2\2\31\u0094\3\2\2\2\33\u0097\3\2\2\2\35"+
		"\u009a\3\2\2\2\37\u009c\3\2\2\2!\u009e\3\2\2\2#\u00a4\3\2\2\2%\u00a6\3"+
		"\2\2\2\'\u00ac\3\2\2\2)\u00ae\3\2\2\2+\u00b0\3\2\2\2-\u00b6\3\2\2\2/\u00b8"+
		"\3\2\2\2\61\u00bf\3\2\2\2\63\u00c4\3\2\2\2\65\u00c9\3\2\2\2\67\u00cf\3"+
		"\2\2\29\u00d5\3\2\2\2;\u00db\3\2\2\2=\u00de\3\2\2\2?\u00e2\3\2\2\2A\u00e7"+
		"\3\2\2\2C\u00ec\3\2\2\2E\u00f1\3\2\2\2G\u00f6\3\2\2\2I\u00fb\3\2\2\2K"+
		"\u00ff\3\2\2\2M\u0105\3\2\2\2O\u010b\3\2\2\2Q\u0111\3\2\2\2S\u0116\3\2"+
		"\2\2U\u011c\3\2\2\2W\u0121\3\2\2\2Y\u012d\3\2\2\2[\u012f\3\2\2\2]\u0137"+
		"\3\2\2\2_\u0159\3\2\2\2a\u016d\3\2\2\2c\u0170\3\2\2\2e\u0176\3\2\2\2g"+
		"\u017f\3\2\2\2i\u0185\3\2\2\2k\u0190\3\2\2\2m\u0192\3\2\2\2op\7-\2\2p"+
		"\4\3\2\2\2qr\7/\2\2r\6\3\2\2\2st\7,\2\2t\b\3\2\2\2uv\7\61\2\2v\n\3\2\2"+
		"\2wx\7\'\2\2x\f\3\2\2\2yz\7c\2\2z{\7p\2\2{|\7f\2\2|\16\3\2\2\2}~\7q\2"+
		"\2~\177\7t\2\2\177\20\3\2\2\2\u0080\u0081\7c\2\2\u0081\u0082\7u\2\2\u0082"+
		"\22\3\2\2\2\u0083\u0084\7d\2\2\u0084\u0085\7g\2\2\u0085\u0086\7v\2\2\u0086"+
		"\u0087\7y\2\2\u0087\u0088\7g\2\2\u0088\u0089\7g\2\2\u0089\u008a\7p\2\2"+
		"\u008a\24\3\2\2\2\u008b\u008c\7p\2\2\u008c\u008d\7q\2\2\u008d\u008e\7"+
		"v\2\2\u008e\26\3\2\2\2\u008f\u0090\7p\2\2\u0090\u0091\7w\2\2\u0091\u0092"+
		"\7n\2\2\u0092\u0093\7n\2\2\u0093\30\3\2\2\2\u0094\u0095\7k\2\2\u0095\u0096"+
		"\7p\2\2\u0096\32\3\2\2\2\u0097\u0098\7k\2\2\u0098\u0099\7u\2\2\u0099\34"+
		"\3\2\2\2\u009a\u009b\7*\2\2\u009b\36\3\2\2\2\u009c\u009d\7+\2\2\u009d"+
		" \3\2\2\2\u009e\u009f\7.\2\2\u009f\"\3\2\2\2\u00a0\u00a1\7>\2\2\u00a1"+
		"\u00a5\7?\2\2\u00a2\u00a3\7#\2\2\u00a3\u00a5\7@\2\2\u00a4\u00a0\3\2\2"+
		"\2\u00a4\u00a2\3\2\2\2\u00a5$\3\2\2\2\u00a6\u00a7\7>\2\2\u00a7&\3\2\2"+
		"\2\u00a8\u00a9\7@\2\2\u00a9\u00ad\7?\2\2\u00aa\u00ab\7#\2\2\u00ab\u00ad"+
		"\7>\2\2\u00ac\u00a8\3\2\2\2\u00ac\u00aa\3\2\2\2\u00ad(\3\2\2\2\u00ae\u00af"+
		"\7@\2\2\u00af*\3\2\2\2\u00b0\u00b1\7?\2\2\u00b1,\3\2\2\2\u00b2\u00b3\7"+
		"#\2\2\u00b3\u00b7\7?\2\2\u00b4\u00b5\7>\2\2\u00b5\u00b7\7@\2\2\u00b6\u00b2"+
		"\3\2\2\2\u00b6\u00b4\3\2\2\2\u00b7.\3\2\2\2\u00b8\u00b9\7u\2\2\u00b9\u00ba"+
		"\7g\2\2\u00ba\u00bb\7n\2\2\u00bb\u00bc\7g\2\2\u00bc\u00bd\7e\2\2\u00bd"+
		"\u00be\7v\2\2\u00be\60\3\2\2\2\u00bf\u00c0\7h\2\2\u00c0\u00c1\7t\2\2\u00c1"+
		"\u00c2\7q\2\2\u00c2\u00c3\7o\2\2\u00c3\62\3\2\2\2\u00c4\u00c5\7l\2\2\u00c5"+
		"\u00c6\7q\2\2\u00c6\u00c7\7k\2\2\u00c7\u00c8\7p\2\2\u00c8\64\3\2\2\2\u00c9"+
		"\u00ca\7y\2\2\u00ca\u00cb\7j\2\2\u00cb\u00cc\7g\2\2\u00cc\u00cd\7t\2\2"+
		"\u00cd\u00ce\7g\2\2\u00ce\66\3\2\2\2\u00cf\u00d0\7q\2\2\u00d0\u00d1\7"+
		"t\2\2\u00d1\u00d2\7f\2\2\u00d2\u00d3\7g\2\2\u00d3\u00d4\7t\2\2\u00d48"+
		"\3\2\2\2\u00d5\u00d6\7i\2\2\u00d6\u00d7\7t\2\2\u00d7\u00d8\7q\2\2\u00d8"+
		"\u00d9\7w\2\2\u00d9\u00da\7r\2\2\u00da:\3\2\2\2\u00db\u00dc\7d\2\2\u00dc"+
		"\u00dd\7{\2\2\u00dd<\3\2\2\2\u00de\u00df\7c\2\2\u00df\u00e0\7u\2\2\u00e0"+
		"\u00e1\7e\2\2\u00e1>\3\2\2\2\u00e2\u00e3\7f\2\2\u00e3\u00e4\7g\2\2\u00e4"+
		"\u00e5\7u\2\2\u00e5\u00e6\7e\2\2\u00e6@\3\2\2\2\u00e7\u00e8\7e\2\2\u00e8"+
		"\u00e9\7c\2\2\u00e9\u00ea\7u\2\2\u00ea\u00eb\7g\2\2\u00ebB\3\2\2\2\u00ec"+
		"\u00ed\7y\2\2\u00ed\u00ee\7j\2\2\u00ee\u00ef\7g\2\2\u00ef\u00f0\7p\2\2"+
		"\u00f0D\3\2\2\2\u00f1\u00f2\7v\2\2\u00f2\u00f3\7j\2\2\u00f3\u00f4\7g\2"+
		"\2\u00f4\u00f5\7p\2\2\u00f5F\3\2\2\2\u00f6\u00f7\7g\2\2\u00f7\u00f8\7"+
		"n\2\2\u00f8\u00f9\7u\2\2\u00f9\u00fa\7g\2\2\u00faH\3\2\2\2\u00fb\u00fc"+
		"\7g\2\2\u00fc\u00fd\7p\2\2\u00fd\u00fe\7f\2\2\u00feJ\3\2\2\2\u00ff\u0100"+
		"\7k\2\2\u0100\u0101\7p\2\2\u0101\u0102\7p\2\2\u0102\u0103\7g\2\2\u0103"+
		"\u0104\7t\2\2\u0104L\3\2\2\2\u0105\u0106\7q\2\2\u0106\u0107\7w\2\2\u0107"+
		"\u0108\7v\2\2\u0108\u0109\7g\2\2\u0109\u010a\7t\2\2\u010aN\3\2\2\2\u010b"+
		"\u010c\7e\2\2\u010c\u010d\7t\2\2\u010d\u010e\7q\2\2\u010e\u010f\7u\2\2"+
		"\u010f\u0110\7u\2\2\u0110P\3\2\2\2\u0111\u0112\7n\2\2\u0112\u0113\7g\2"+
		"\2\u0113\u0114\7h\2\2\u0114\u0115\7v\2\2\u0115R\3\2\2\2\u0116\u0117\7"+
		"t\2\2\u0117\u0118\7k\2\2\u0118\u0119\7i\2\2\u0119\u011a\7j\2\2\u011a\u011b"+
		"\7v\2\2\u011bT\3\2\2\2\u011c\u011d\7h\2\2\u011d\u011e\7w\2\2\u011e\u011f"+
		"\7n\2\2\u011f\u0120\7n\2\2\u0120V\3\2\2\2\u0121\u0122\7q\2\2\u0122\u0123"+
		"\7p\2\2\u0123X\3\2\2\2\u0124\u0125\7v\2\2\u0125\u0126\7t\2\2\u0126\u0127"+
		"\7w\2\2\u0127\u012e\7g\2\2\u0128\u0129\7h\2\2\u0129\u012a\7c\2\2\u012a"+
		"\u012b\7n\2\2\u012b\u012c\7u\2\2\u012c\u012e\7g\2\2\u012d\u0124\3\2\2"+
		"\2\u012d\u0128\3\2\2\2\u012eZ\3\2\2\2\u012f\u0133\t\2\2\2\u0130\u0132"+
		"\t\3\2\2\u0131\u0130\3\2\2\2\u0132\u0135\3\2\2\2\u0133\u0131\3\2\2\2\u0133"+
		"\u0134\3\2\2\2\u0134\\\3\2\2\2\u0135\u0133\3\2\2\2\u0136\u0138\4\62;\2"+
		"\u0137\u0136\3\2\2\2\u0138\u0139\3\2\2\2\u0139\u0137\3\2\2\2\u0139\u013a"+
		"\3\2\2\2\u013a^\3\2\2\2\u013b\u013d\4\62;\2\u013c\u013b\3\2\2\2\u013d"+
		"\u013e\3\2\2\2\u013e\u013c\3\2\2\2\u013e\u013f\3\2\2\2\u013f\u0140\3\2"+
		"\2\2\u0140\u0144\7\60\2\2\u0141\u0143\4\62;\2\u0142\u0141\3\2\2\2\u0143"+
		"\u0146\3\2\2\2\u0144\u0142\3\2\2\2\u0144\u0145\3\2\2\2\u0145\u0148\3\2"+
		"\2\2\u0146\u0144\3\2\2\2\u0147\u0149\5e\63\2\u0148\u0147\3\2\2\2\u0148"+
		"\u0149\3\2\2\2\u0149\u015a\3\2\2\2\u014a\u014c\7\60\2\2\u014b\u014d\4"+
		"\62;\2\u014c\u014b\3\2\2\2\u014d\u014e\3\2\2\2\u014e\u014c\3\2\2\2\u014e"+
		"\u014f\3\2\2\2\u014f\u0151\3\2\2\2\u0150\u0152\5e\63\2\u0151\u0150\3\2"+
		"\2\2\u0151\u0152\3\2\2\2\u0152\u015a\3\2\2\2\u0153\u0155\4\62;\2\u0154"+
		"\u0153\3\2\2\2\u0155\u0156\3\2\2\2\u0156\u0154\3\2\2\2\u0156\u0157\3\2"+
		"\2\2\u0157\u0158\3\2\2\2\u0158\u015a\5e\63\2\u0159\u013c\3\2\2\2\u0159"+
		"\u014a\3\2\2\2\u0159\u0154\3\2\2\2\u015a`\3\2\2\2\u015b\u0160\7$\2\2\u015c"+
		"\u015f\5i\65\2\u015d\u015f\n\4\2\2\u015e\u015c\3\2\2\2\u015e\u015d\3\2"+
		"\2\2\u015f\u0162\3\2\2\2\u0160\u015e\3\2\2\2\u0160\u0161\3\2\2\2\u0161"+
		"\u0163\3\2\2\2\u0162\u0160\3\2\2\2\u0163\u016e\7$\2\2\u0164\u0169\7)\2"+
		"\2\u0165\u0168\5i\65\2\u0166\u0168\n\5\2\2\u0167\u0165\3\2\2\2\u0167\u0166"+
		"\3\2\2\2\u0168\u016b\3\2\2\2\u0169\u0167\3\2\2\2\u0169\u016a\3\2\2\2\u016a"+
		"\u016c\3\2\2\2\u016b\u0169\3\2\2\2\u016c\u016e\7)\2\2\u016d\u015b\3\2"+
		"\2\2\u016d\u0164\3\2\2\2\u016eb\3\2\2\2\u016f\u0171\t\6\2\2\u0170\u016f"+
		"\3\2\2\2\u0171\u0172\3\2\2\2\u0172\u0170\3\2\2\2\u0172\u0173\3\2\2\2\u0173"+
		"\u0174\3\2\2\2\u0174\u0175\b\62\2\2\u0175d\3\2\2\2\u0176\u0178\t\7\2\2"+
		"\u0177\u0179\t\b\2\2\u0178\u0177\3\2\2\2\u0178\u0179\3\2\2\2\u0179\u017b"+
		"\3\2\2\2\u017a\u017c\4\62;\2\u017b\u017a\3\2\2\2\u017c\u017d\3\2\2\2\u017d"+
		"\u017b\3\2\2\2\u017d\u017e\3\2\2\2\u017ef\3\2\2\2\u017f\u0180\t\t\2\2"+
		"\u0180h\3\2\2\2\u0181\u0182\7^\2\2\u0182\u0186\t\n\2\2\u0183\u0186\5m"+
		"\67\2\u0184\u0186\5k\66\2\u0185\u0181\3\2\2\2\u0185\u0183\3\2\2\2\u0185"+
		"\u0184\3\2\2\2\u0186j\3\2\2\2\u0187\u0188\7^\2\2\u0188\u0189\4\62\65\2"+
		"\u0189\u018a\4\629\2\u018a\u0191\4\629\2\u018b\u018c\7^\2\2\u018c\u018d"+
		"\4\629\2\u018d\u0191\4\629\2\u018e\u018f\7^\2\2\u018f\u0191\4\629\2\u0190"+
		"\u0187\3\2\2\2\u0190\u018b\3\2\2\2\u0190\u018e\3\2\2\2\u0191l\3\2\2\2"+
		"\u0192\u0193\7^\2\2\u0193\u0194\7w\2\2\u0194\u0195\5g\64\2\u0195\u0196"+
		"\5g\64\2\u0196\u0197\5g\64\2\u0197\u0198\5g\64\2\u0198n\3\2\2\2\32\2\u00a4"+
		"\u00ac\u00b6\u012d\u0133\u0139\u013e\u0144\u0148\u014e\u0151\u0156\u0159"+
		"\u015e\u0160\u0167\u0169\u016d\u0172\u0178\u017d\u0185\u0190";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}