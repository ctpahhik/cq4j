// Generated from BaseSql.g4 by ANTLR 4.1
package com.github.ctpahhik.cq4j.grammar.generated;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class BaseSqlLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		PLUS=1, MINUS=2, STAR=3, DIV=4, MOD=5, AND=6, OR=7, AS=8, BETWEEN=9, NOT=10, 
		NULL=11, IN=12, IS=13, L_PAREN=14, R_PAREN=15, COMA=16, DOT=17, LT_EQ=18, 
		LT=19, GT_EQ=20, GT=21, EQ=22, NOT_EQ=23, SELECT=24, FROM=25, JOIN=26, 
		WHERE=27, ORDER=28, GROUP=29, BY=30, ASC=31, DESC=32, CASE=33, WHEN=34, 
		THEN=35, ELSE=36, END=37, INNER=38, OUTER=39, CROSS=40, LEFT=41, RIGHT=42, 
		FULL=43, ON=44, BOOLEAN=45, ID=46, INT=47, FLOAT=48, STRING=49, WS=50;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'+'", "'-'", "'*'", "'/'", "'%'", "'and'", "'or'", "'as'", "'between'", 
		"'not'", "'null'", "'in'", "'is'", "'('", "')'", "','", "'.'", "LT_EQ", 
		"'<'", "GT_EQ", "'>'", "'='", "NOT_EQ", "'select'", "'from'", "'join'", 
		"'where'", "'order'", "'group'", "'by'", "'asc'", "'desc'", "'case'", 
		"'when'", "'then'", "'else'", "'end'", "'inner'", "'outer'", "'cross'", 
		"'left'", "'right'", "'full'", "'on'", "BOOLEAN", "ID", "INT", "FLOAT", 
		"STRING", "WS"
	};
	public static final String[] ruleNames = {
		"PLUS", "MINUS", "STAR", "DIV", "MOD", "AND", "OR", "AS", "BETWEEN", "NOT", 
		"NULL", "IN", "IS", "L_PAREN", "R_PAREN", "COMA", "DOT", "LT_EQ", "LT", 
		"GT_EQ", "GT", "EQ", "NOT_EQ", "SELECT", "FROM", "JOIN", "WHERE", "ORDER", 
		"GROUP", "BY", "ASC", "DESC", "CASE", "WHEN", "THEN", "ELSE", "END", "INNER", 
		"OUTER", "CROSS", "LEFT", "RIGHT", "FULL", "ON", "BOOLEAN", "ID", "INT", 
		"FLOAT", "STRING", "WS", "EXPONENT", "HEX_DIGIT", "ESC_SEQ", "OCTAL_ESC", 
		"UNICODE_ESC"
	};


	public BaseSqlLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "BaseSql.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 49: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2\64\u019d\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\3\2\3\2\3\3\3\3\3\4\3\4\3\5"+
		"\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3"+
		"\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\16"+
		"\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\23"+
		"\5\23\u00a9\n\23\3\24\3\24\3\25\3\25\3\25\3\25\5\25\u00b1\n\25\3\26\3"+
		"\26\3\27\3\27\3\30\3\30\3\30\3\30\5\30\u00bb\n\30\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34"+
		"\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3 \3!\3!\3!\3!\3!\3\"\3\"\3\""+
		"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3\'"+
		"\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\3"+
		"*\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3.\3"+
		".\5.\u0132\n.\3/\3/\7/\u0136\n/\f/\16/\u0139\13/\3\60\6\60\u013c\n\60"+
		"\r\60\16\60\u013d\3\61\6\61\u0141\n\61\r\61\16\61\u0142\3\61\3\61\7\61"+
		"\u0147\n\61\f\61\16\61\u014a\13\61\3\61\5\61\u014d\n\61\3\61\3\61\6\61"+
		"\u0151\n\61\r\61\16\61\u0152\3\61\5\61\u0156\n\61\3\61\6\61\u0159\n\61"+
		"\r\61\16\61\u015a\3\61\5\61\u015e\n\61\3\62\3\62\3\62\7\62\u0163\n\62"+
		"\f\62\16\62\u0166\13\62\3\62\3\62\3\62\3\62\7\62\u016c\n\62\f\62\16\62"+
		"\u016f\13\62\3\62\5\62\u0172\n\62\3\63\6\63\u0175\n\63\r\63\16\63\u0176"+
		"\3\63\3\63\3\64\3\64\5\64\u017d\n\64\3\64\6\64\u0180\n\64\r\64\16\64\u0181"+
		"\3\65\3\65\3\66\3\66\3\66\3\66\5\66\u018a\n\66\3\67\3\67\3\67\3\67\3\67"+
		"\3\67\3\67\3\67\3\67\5\67\u0195\n\67\38\38\38\38\38\38\38\29\3\3\1\5\4"+
		"\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16"+
		"\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1"+
		"/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$"+
		"\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1Y.\1[/\1]\60\1_\61\1a\62\1c\63"+
		"\1e\64\2g\2\1i\2\1k\2\1m\2\1o\2\1\3\2\13\5\2C\\aac|\6\2\62;C\\aac|\4\2"+
		"$$^^\4\2))^^\5\2\13\f\17\17\"\"\4\2GGgg\4\2--//\5\2\62;CHch\n\2$$))^^"+
		"ddhhppttvv\u01b1\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13"+
		"\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2"+
		"\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2"+
		"!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3"+
		"\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2"+
		"\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E"+
		"\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2"+
		"\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2"+
		"\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\3q\3\2\2\2\5s\3\2\2\2\7u"+
		"\3\2\2\2\tw\3\2\2\2\13y\3\2\2\2\r{\3\2\2\2\17\177\3\2\2\2\21\u0082\3\2"+
		"\2\2\23\u0085\3\2\2\2\25\u008d\3\2\2\2\27\u0091\3\2\2\2\31\u0096\3\2\2"+
		"\2\33\u0099\3\2\2\2\35\u009c\3\2\2\2\37\u009e\3\2\2\2!\u00a0\3\2\2\2#"+
		"\u00a2\3\2\2\2%\u00a8\3\2\2\2\'\u00aa\3\2\2\2)\u00b0\3\2\2\2+\u00b2\3"+
		"\2\2\2-\u00b4\3\2\2\2/\u00ba\3\2\2\2\61\u00bc\3\2\2\2\63\u00c3\3\2\2\2"+
		"\65\u00c8\3\2\2\2\67\u00cd\3\2\2\29\u00d3\3\2\2\2;\u00d9\3\2\2\2=\u00df"+
		"\3\2\2\2?\u00e2\3\2\2\2A\u00e6\3\2\2\2C\u00eb\3\2\2\2E\u00f0\3\2\2\2G"+
		"\u00f5\3\2\2\2I\u00fa\3\2\2\2K\u00ff\3\2\2\2M\u0103\3\2\2\2O\u0109\3\2"+
		"\2\2Q\u010f\3\2\2\2S\u0115\3\2\2\2U\u011a\3\2\2\2W\u0120\3\2\2\2Y\u0125"+
		"\3\2\2\2[\u0131\3\2\2\2]\u0133\3\2\2\2_\u013b\3\2\2\2a\u015d\3\2\2\2c"+
		"\u0171\3\2\2\2e\u0174\3\2\2\2g\u017a\3\2\2\2i\u0183\3\2\2\2k\u0189\3\2"+
		"\2\2m\u0194\3\2\2\2o\u0196\3\2\2\2qr\7-\2\2r\4\3\2\2\2st\7/\2\2t\6\3\2"+
		"\2\2uv\7,\2\2v\b\3\2\2\2wx\7\61\2\2x\n\3\2\2\2yz\7\'\2\2z\f\3\2\2\2{|"+
		"\7c\2\2|}\7p\2\2}~\7f\2\2~\16\3\2\2\2\177\u0080\7q\2\2\u0080\u0081\7t"+
		"\2\2\u0081\20\3\2\2\2\u0082\u0083\7c\2\2\u0083\u0084\7u\2\2\u0084\22\3"+
		"\2\2\2\u0085\u0086\7d\2\2\u0086\u0087\7g\2\2\u0087\u0088\7v\2\2\u0088"+
		"\u0089\7y\2\2\u0089\u008a\7g\2\2\u008a\u008b\7g\2\2\u008b\u008c\7p\2\2"+
		"\u008c\24\3\2\2\2\u008d\u008e\7p\2\2\u008e\u008f\7q\2\2\u008f\u0090\7"+
		"v\2\2\u0090\26\3\2\2\2\u0091\u0092\7p\2\2\u0092\u0093\7w\2\2\u0093\u0094"+
		"\7n\2\2\u0094\u0095\7n\2\2\u0095\30\3\2\2\2\u0096\u0097\7k\2\2\u0097\u0098"+
		"\7p\2\2\u0098\32\3\2\2\2\u0099\u009a\7k\2\2\u009a\u009b\7u\2\2\u009b\34"+
		"\3\2\2\2\u009c\u009d\7*\2\2\u009d\36\3\2\2\2\u009e\u009f\7+\2\2\u009f"+
		" \3\2\2\2\u00a0\u00a1\7.\2\2\u00a1\"\3\2\2\2\u00a2\u00a3\7\60\2\2\u00a3"+
		"$\3\2\2\2\u00a4\u00a5\7>\2\2\u00a5\u00a9\7?\2\2\u00a6\u00a7\7#\2\2\u00a7"+
		"\u00a9\7@\2\2\u00a8\u00a4\3\2\2\2\u00a8\u00a6\3\2\2\2\u00a9&\3\2\2\2\u00aa"+
		"\u00ab\7>\2\2\u00ab(\3\2\2\2\u00ac\u00ad\7@\2\2\u00ad\u00b1\7?\2\2\u00ae"+
		"\u00af\7#\2\2\u00af\u00b1\7>\2\2\u00b0\u00ac\3\2\2\2\u00b0\u00ae\3\2\2"+
		"\2\u00b1*\3\2\2\2\u00b2\u00b3\7@\2\2\u00b3,\3\2\2\2\u00b4\u00b5\7?\2\2"+
		"\u00b5.\3\2\2\2\u00b6\u00b7\7#\2\2\u00b7\u00bb\7?\2\2\u00b8\u00b9\7>\2"+
		"\2\u00b9\u00bb\7@\2\2\u00ba\u00b6\3\2\2\2\u00ba\u00b8\3\2\2\2\u00bb\60"+
		"\3\2\2\2\u00bc\u00bd\7u\2\2\u00bd\u00be\7g\2\2\u00be\u00bf\7n\2\2\u00bf"+
		"\u00c0\7g\2\2\u00c0\u00c1\7e\2\2\u00c1\u00c2\7v\2\2\u00c2\62\3\2\2\2\u00c3"+
		"\u00c4\7h\2\2\u00c4\u00c5\7t\2\2\u00c5\u00c6\7q\2\2\u00c6\u00c7\7o\2\2"+
		"\u00c7\64\3\2\2\2\u00c8\u00c9\7l\2\2\u00c9\u00ca\7q\2\2\u00ca\u00cb\7"+
		"k\2\2\u00cb\u00cc\7p\2\2\u00cc\66\3\2\2\2\u00cd\u00ce\7y\2\2\u00ce\u00cf"+
		"\7j\2\2\u00cf\u00d0\7g\2\2\u00d0\u00d1\7t\2\2\u00d1\u00d2\7g\2\2\u00d2"+
		"8\3\2\2\2\u00d3\u00d4\7q\2\2\u00d4\u00d5\7t\2\2\u00d5\u00d6\7f\2\2\u00d6"+
		"\u00d7\7g\2\2\u00d7\u00d8\7t\2\2\u00d8:\3\2\2\2\u00d9\u00da\7i\2\2\u00da"+
		"\u00db\7t\2\2\u00db\u00dc\7q\2\2\u00dc\u00dd\7w\2\2\u00dd\u00de\7r\2\2"+
		"\u00de<\3\2\2\2\u00df\u00e0\7d\2\2\u00e0\u00e1\7{\2\2\u00e1>\3\2\2\2\u00e2"+
		"\u00e3\7c\2\2\u00e3\u00e4\7u\2\2\u00e4\u00e5\7e\2\2\u00e5@\3\2\2\2\u00e6"+
		"\u00e7\7f\2\2\u00e7\u00e8\7g\2\2\u00e8\u00e9\7u\2\2\u00e9\u00ea\7e\2\2"+
		"\u00eaB\3\2\2\2\u00eb\u00ec\7e\2\2\u00ec\u00ed\7c\2\2\u00ed\u00ee\7u\2"+
		"\2\u00ee\u00ef\7g\2\2\u00efD\3\2\2\2\u00f0\u00f1\7y\2\2\u00f1\u00f2\7"+
		"j\2\2\u00f2\u00f3\7g\2\2\u00f3\u00f4\7p\2\2\u00f4F\3\2\2\2\u00f5\u00f6"+
		"\7v\2\2\u00f6\u00f7\7j\2\2\u00f7\u00f8\7g\2\2\u00f8\u00f9\7p\2\2\u00f9"+
		"H\3\2\2\2\u00fa\u00fb\7g\2\2\u00fb\u00fc\7n\2\2\u00fc\u00fd\7u\2\2\u00fd"+
		"\u00fe\7g\2\2\u00feJ\3\2\2\2\u00ff\u0100\7g\2\2\u0100\u0101\7p\2\2\u0101"+
		"\u0102\7f\2\2\u0102L\3\2\2\2\u0103\u0104\7k\2\2\u0104\u0105\7p\2\2\u0105"+
		"\u0106\7p\2\2\u0106\u0107\7g\2\2\u0107\u0108\7t\2\2\u0108N\3\2\2\2\u0109"+
		"\u010a\7q\2\2\u010a\u010b\7w\2\2\u010b\u010c\7v\2\2\u010c\u010d\7g\2\2"+
		"\u010d\u010e\7t\2\2\u010eP\3\2\2\2\u010f\u0110\7e\2\2\u0110\u0111\7t\2"+
		"\2\u0111\u0112\7q\2\2\u0112\u0113\7u\2\2\u0113\u0114\7u\2\2\u0114R\3\2"+
		"\2\2\u0115\u0116\7n\2\2\u0116\u0117\7g\2\2\u0117\u0118\7h\2\2\u0118\u0119"+
		"\7v\2\2\u0119T\3\2\2\2\u011a\u011b\7t\2\2\u011b\u011c\7k\2\2\u011c\u011d"+
		"\7i\2\2\u011d\u011e\7j\2\2\u011e\u011f\7v\2\2\u011fV\3\2\2\2\u0120\u0121"+
		"\7h\2\2\u0121\u0122\7w\2\2\u0122\u0123\7n\2\2\u0123\u0124\7n\2\2\u0124"+
		"X\3\2\2\2\u0125\u0126\7q\2\2\u0126\u0127\7p\2\2\u0127Z\3\2\2\2\u0128\u0129"+
		"\7v\2\2\u0129\u012a\7t\2\2\u012a\u012b\7w\2\2\u012b\u0132\7g\2\2\u012c"+
		"\u012d\7h\2\2\u012d\u012e\7c\2\2\u012e\u012f\7n\2\2\u012f\u0130\7u\2\2"+
		"\u0130\u0132\7g\2\2\u0131\u0128\3\2\2\2\u0131\u012c\3\2\2\2\u0132\\\3"+
		"\2\2\2\u0133\u0137\t\2\2\2\u0134\u0136\t\3\2\2\u0135\u0134\3\2\2\2\u0136"+
		"\u0139\3\2\2\2\u0137\u0135\3\2\2\2\u0137\u0138\3\2\2\2\u0138^\3\2\2\2"+
		"\u0139\u0137\3\2\2\2\u013a\u013c\4\62;\2\u013b\u013a\3\2\2\2\u013c\u013d"+
		"\3\2\2\2\u013d\u013b\3\2\2\2\u013d\u013e\3\2\2\2\u013e`\3\2\2\2\u013f"+
		"\u0141\4\62;\2\u0140\u013f\3\2\2\2\u0141\u0142\3\2\2\2\u0142\u0140\3\2"+
		"\2\2\u0142\u0143\3\2\2\2\u0143\u0144\3\2\2\2\u0144\u0148\7\60\2\2\u0145"+
		"\u0147\4\62;\2\u0146\u0145\3\2\2\2\u0147\u014a\3\2\2\2\u0148\u0146\3\2"+
		"\2\2\u0148\u0149\3\2\2\2\u0149\u014c\3\2\2\2\u014a\u0148\3\2\2\2\u014b"+
		"\u014d\5g\64\2\u014c\u014b\3\2\2\2\u014c\u014d\3\2\2\2\u014d\u015e\3\2"+
		"\2\2\u014e\u0150\7\60\2\2\u014f\u0151\4\62;\2\u0150\u014f\3\2\2\2\u0151"+
		"\u0152\3\2\2\2\u0152\u0150\3\2\2\2\u0152\u0153\3\2\2\2\u0153\u0155\3\2"+
		"\2\2\u0154\u0156\5g\64\2\u0155\u0154\3\2\2\2\u0155\u0156\3\2\2\2\u0156"+
		"\u015e\3\2\2\2\u0157\u0159\4\62;\2\u0158\u0157\3\2\2\2\u0159\u015a\3\2"+
		"\2\2\u015a\u0158\3\2\2\2\u015a\u015b\3\2\2\2\u015b\u015c\3\2\2\2\u015c"+
		"\u015e\5g\64\2\u015d\u0140\3\2\2\2\u015d\u014e\3\2\2\2\u015d\u0158\3\2"+
		"\2\2\u015eb\3\2\2\2\u015f\u0164\7$\2\2\u0160\u0163\5k\66\2\u0161\u0163"+
		"\n\4\2\2\u0162\u0160\3\2\2\2\u0162\u0161\3\2\2\2\u0163\u0166\3\2\2\2\u0164"+
		"\u0162\3\2\2\2\u0164\u0165\3\2\2\2\u0165\u0167\3\2\2\2\u0166\u0164\3\2"+
		"\2\2\u0167\u0172\7$\2\2\u0168\u016d\7)\2\2\u0169\u016c\5k\66\2\u016a\u016c"+
		"\n\5\2\2\u016b\u0169\3\2\2\2\u016b\u016a\3\2\2\2\u016c\u016f\3\2\2\2\u016d"+
		"\u016b\3\2\2\2\u016d\u016e\3\2\2\2\u016e\u0170\3\2\2\2\u016f\u016d\3\2"+
		"\2\2\u0170\u0172\7)\2\2\u0171\u015f\3\2\2\2\u0171\u0168\3\2\2\2\u0172"+
		"d\3\2\2\2\u0173\u0175\t\6\2\2\u0174\u0173\3\2\2\2\u0175\u0176\3\2\2\2"+
		"\u0176\u0174\3\2\2\2\u0176\u0177\3\2\2\2\u0177\u0178\3\2\2\2\u0178\u0179"+
		"\b\63\2\2\u0179f\3\2\2\2\u017a\u017c\t\7\2\2\u017b\u017d\t\b\2\2\u017c"+
		"\u017b\3\2\2\2\u017c\u017d\3\2\2\2\u017d\u017f\3\2\2\2\u017e\u0180\4\62"+
		";\2\u017f\u017e\3\2\2\2\u0180\u0181\3\2\2\2\u0181\u017f\3\2\2\2\u0181"+
		"\u0182\3\2\2\2\u0182h\3\2\2\2\u0183\u0184\t\t\2\2\u0184j\3\2\2\2\u0185"+
		"\u0186\7^\2\2\u0186\u018a\t\n\2\2\u0187\u018a\5o8\2\u0188\u018a\5m\67"+
		"\2\u0189\u0185\3\2\2\2\u0189\u0187\3\2\2\2\u0189\u0188\3\2\2\2\u018al"+
		"\3\2\2\2\u018b\u018c\7^\2\2\u018c\u018d\4\62\65\2\u018d\u018e\4\629\2"+
		"\u018e\u0195\4\629\2\u018f\u0190\7^\2\2\u0190\u0191\4\629\2\u0191\u0195"+
		"\4\629\2\u0192\u0193\7^\2\2\u0193\u0195\4\629\2\u0194\u018b\3\2\2\2\u0194"+
		"\u018f\3\2\2\2\u0194\u0192\3\2\2\2\u0195n\3\2\2\2\u0196\u0197\7^\2\2\u0197"+
		"\u0198\7w\2\2\u0198\u0199\5i\65\2\u0199\u019a\5i\65\2\u019a\u019b\5i\65"+
		"\2\u019b\u019c\5i\65\2\u019cp\3\2\2\2\32\2\u00a8\u00b0\u00ba\u0131\u0137"+
		"\u013d\u0142\u0148\u014c\u0152\u0155\u015a\u015d\u0162\u0164\u016b\u016d"+
		"\u0171\u0176\u017c\u0181\u0189\u0194";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}