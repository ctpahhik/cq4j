// Generated from BaseSql.g4 by ANTLR 4.1
package com.github.ctpahhik.cq4j.grammar.generated;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class BaseSqlLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		PLUS=1, MINUS=2, STAR=3, DIV=4, MOD=5, AND=6, OR=7, AS=8, BETWEEN=9, NOT=10, 
		NULL=11, IN=12, IS=13, L_PAREN=14, R_PAREN=15, COMA=16, LT_EQ=17, LT=18, 
		GT_EQ=19, GT=20, EQ=21, NOT_EQ=22, SELECT=23, FROM=24, JOIN=25, WHERE=26, 
		ORDER=27, GROUP=28, BY=29, CASE=30, WHEN=31, THEN=32, ELSE=33, END=34, 
		INNER=35, OUTER=36, CROSS=37, LEFT=38, RIGHT=39, FULL=40, ON=41, BOOLEAN=42, 
		ID=43, INT=44, FLOAT=45, STRING=46, WS=47;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'+'", "'-'", "'*'", "'/'", "'%'", "'and'", "'or'", "'as'", "'between'", 
		"'not'", "'null'", "'in'", "'is'", "'('", "')'", "','", "LT_EQ", "'<'", 
		"GT_EQ", "'>'", "'='", "NOT_EQ", "'select'", "'from'", "'join'", "'where'", 
		"'order'", "'group'", "'by'", "'case'", "'when'", "'then'", "'else'", 
		"'end'", "'inner'", "'outer'", "'cross'", "'left'", "'right'", "'full'", 
		"'on'", "BOOLEAN", "ID", "INT", "FLOAT", "STRING", "WS"
	};
	public static final String[] ruleNames = {
		"PLUS", "MINUS", "STAR", "DIV", "MOD", "AND", "OR", "AS", "BETWEEN", "NOT", 
		"NULL", "IN", "IS", "L_PAREN", "R_PAREN", "COMA", "LT_EQ", "LT", "GT_EQ", 
		"GT", "EQ", "NOT_EQ", "SELECT", "FROM", "JOIN", "WHERE", "ORDER", "GROUP", 
		"BY", "CASE", "WHEN", "THEN", "ELSE", "END", "INNER", "OUTER", "CROSS", 
		"LEFT", "RIGHT", "FULL", "ON", "BOOLEAN", "ID", "INT", "FLOAT", "STRING", 
		"WS", "EXPONENT", "HEX_DIGIT", "ESC_SEQ", "OCTAL_ESC", "UNICODE_ESC"
	};


	public BaseSqlLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "BaseSql.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 46: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2\61\u018c\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3"+
		"\7\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3"+
		"\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\20"+
		"\3\20\3\21\3\21\3\22\3\22\3\22\3\22\5\22\u00a1\n\22\3\23\3\23\3\24\3\24"+
		"\3\24\3\24\5\24\u00a9\n\24\3\25\3\25\3\26\3\26\3\27\3\27\3\27\3\27\5\27"+
		"\u00b3\n\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31"+
		"\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34"+
		"\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37"+
		"\3\37\3\37\3\37\3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3#\3"+
		"#\3#\3#\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3\'\3\'"+
		"\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3*\3*\3*\3+\3+\3+\3+\3+"+
		"\3+\3+\3+\3+\5+\u0121\n+\3,\3,\7,\u0125\n,\f,\16,\u0128\13,\3-\6-\u012b"+
		"\n-\r-\16-\u012c\3.\6.\u0130\n.\r.\16.\u0131\3.\3.\7.\u0136\n.\f.\16."+
		"\u0139\13.\3.\5.\u013c\n.\3.\3.\6.\u0140\n.\r.\16.\u0141\3.\5.\u0145\n"+
		".\3.\6.\u0148\n.\r.\16.\u0149\3.\5.\u014d\n.\3/\3/\3/\7/\u0152\n/\f/\16"+
		"/\u0155\13/\3/\3/\3/\3/\7/\u015b\n/\f/\16/\u015e\13/\3/\5/\u0161\n/\3"+
		"\60\6\60\u0164\n\60\r\60\16\60\u0165\3\60\3\60\3\61\3\61\5\61\u016c\n"+
		"\61\3\61\6\61\u016f\n\61\r\61\16\61\u0170\3\62\3\62\3\63\3\63\3\63\3\63"+
		"\5\63\u0179\n\63\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\5\64\u0184"+
		"\n\64\3\65\3\65\3\65\3\65\3\65\3\65\3\65\2\66\3\3\1\5\4\1\7\5\1\t\6\1"+
		"\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20"+
		"\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63"+
		"\33\1\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M("+
		"\1O)\1Q*\1S+\1U,\1W-\1Y.\1[/\1]\60\1_\61\2a\2\1c\2\1e\2\1g\2\1i\2\1\3"+
		"\2\13\5\2C\\aac|\6\2\62;C\\aac|\4\2$$^^\4\2))^^\5\2\13\f\17\17\"\"\4\2"+
		"GGgg\4\2--//\5\2\62;CHch\n\2$$))^^ddhhppttvv\u01a0\2\3\3\2\2\2\2\5\3\2"+
		"\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21"+
		"\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2"+
		"\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3"+
		"\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3"+
		"\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3"+
		"\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2"+
		"\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2"+
		"Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\3k\3\2\2\2\5m\3\2\2\2\7o\3"+
		"\2\2\2\tq\3\2\2\2\13s\3\2\2\2\ru\3\2\2\2\17y\3\2\2\2\21|\3\2\2\2\23\177"+
		"\3\2\2\2\25\u0087\3\2\2\2\27\u008b\3\2\2\2\31\u0090\3\2\2\2\33\u0093\3"+
		"\2\2\2\35\u0096\3\2\2\2\37\u0098\3\2\2\2!\u009a\3\2\2\2#\u00a0\3\2\2\2"+
		"%\u00a2\3\2\2\2\'\u00a8\3\2\2\2)\u00aa\3\2\2\2+\u00ac\3\2\2\2-\u00b2\3"+
		"\2\2\2/\u00b4\3\2\2\2\61\u00bb\3\2\2\2\63\u00c0\3\2\2\2\65\u00c5\3\2\2"+
		"\2\67\u00cb\3\2\2\29\u00d1\3\2\2\2;\u00d7\3\2\2\2=\u00da\3\2\2\2?\u00df"+
		"\3\2\2\2A\u00e4\3\2\2\2C\u00e9\3\2\2\2E\u00ee\3\2\2\2G\u00f2\3\2\2\2I"+
		"\u00f8\3\2\2\2K\u00fe\3\2\2\2M\u0104\3\2\2\2O\u0109\3\2\2\2Q\u010f\3\2"+
		"\2\2S\u0114\3\2\2\2U\u0120\3\2\2\2W\u0122\3\2\2\2Y\u012a\3\2\2\2[\u014c"+
		"\3\2\2\2]\u0160\3\2\2\2_\u0163\3\2\2\2a\u0169\3\2\2\2c\u0172\3\2\2\2e"+
		"\u0178\3\2\2\2g\u0183\3\2\2\2i\u0185\3\2\2\2kl\7-\2\2l\4\3\2\2\2mn\7/"+
		"\2\2n\6\3\2\2\2op\7,\2\2p\b\3\2\2\2qr\7\61\2\2r\n\3\2\2\2st\7\'\2\2t\f"+
		"\3\2\2\2uv\7c\2\2vw\7p\2\2wx\7f\2\2x\16\3\2\2\2yz\7q\2\2z{\7t\2\2{\20"+
		"\3\2\2\2|}\7c\2\2}~\7u\2\2~\22\3\2\2\2\177\u0080\7d\2\2\u0080\u0081\7"+
		"g\2\2\u0081\u0082\7v\2\2\u0082\u0083\7y\2\2\u0083\u0084\7g\2\2\u0084\u0085"+
		"\7g\2\2\u0085\u0086\7p\2\2\u0086\24\3\2\2\2\u0087\u0088\7p\2\2\u0088\u0089"+
		"\7q\2\2\u0089\u008a\7v\2\2\u008a\26\3\2\2\2\u008b\u008c\7p\2\2\u008c\u008d"+
		"\7w\2\2\u008d\u008e\7n\2\2\u008e\u008f\7n\2\2\u008f\30\3\2\2\2\u0090\u0091"+
		"\7k\2\2\u0091\u0092\7p\2\2\u0092\32\3\2\2\2\u0093\u0094\7k\2\2\u0094\u0095"+
		"\7u\2\2\u0095\34\3\2\2\2\u0096\u0097\7*\2\2\u0097\36\3\2\2\2\u0098\u0099"+
		"\7+\2\2\u0099 \3\2\2\2\u009a\u009b\7.\2\2\u009b\"\3\2\2\2\u009c\u009d"+
		"\7>\2\2\u009d\u00a1\7?\2\2\u009e\u009f\7#\2\2\u009f\u00a1\7@\2\2\u00a0"+
		"\u009c\3\2\2\2\u00a0\u009e\3\2\2\2\u00a1$\3\2\2\2\u00a2\u00a3\7>\2\2\u00a3"+
		"&\3\2\2\2\u00a4\u00a5\7@\2\2\u00a5\u00a9\7?\2\2\u00a6\u00a7\7#\2\2\u00a7"+
		"\u00a9\7>\2\2\u00a8\u00a4\3\2\2\2\u00a8\u00a6\3\2\2\2\u00a9(\3\2\2\2\u00aa"+
		"\u00ab\7@\2\2\u00ab*\3\2\2\2\u00ac\u00ad\7?\2\2\u00ad,\3\2\2\2\u00ae\u00af"+
		"\7#\2\2\u00af\u00b3\7?\2\2\u00b0\u00b1\7>\2\2\u00b1\u00b3\7@\2\2\u00b2"+
		"\u00ae\3\2\2\2\u00b2\u00b0\3\2\2\2\u00b3.\3\2\2\2\u00b4\u00b5\7u\2\2\u00b5"+
		"\u00b6\7g\2\2\u00b6\u00b7\7n\2\2\u00b7\u00b8\7g\2\2\u00b8\u00b9\7e\2\2"+
		"\u00b9\u00ba\7v\2\2\u00ba\60\3\2\2\2\u00bb\u00bc\7h\2\2\u00bc\u00bd\7"+
		"t\2\2\u00bd\u00be\7q\2\2\u00be\u00bf\7o\2\2\u00bf\62\3\2\2\2\u00c0\u00c1"+
		"\7l\2\2\u00c1\u00c2\7q\2\2\u00c2\u00c3\7k\2\2\u00c3\u00c4\7p\2\2\u00c4"+
		"\64\3\2\2\2\u00c5\u00c6\7y\2\2\u00c6\u00c7\7j\2\2\u00c7\u00c8\7g\2\2\u00c8"+
		"\u00c9\7t\2\2\u00c9\u00ca\7g\2\2\u00ca\66\3\2\2\2\u00cb\u00cc\7q\2\2\u00cc"+
		"\u00cd\7t\2\2\u00cd\u00ce\7f\2\2\u00ce\u00cf\7g\2\2\u00cf\u00d0\7t\2\2"+
		"\u00d08\3\2\2\2\u00d1\u00d2\7i\2\2\u00d2\u00d3\7t\2\2\u00d3\u00d4\7q\2"+
		"\2\u00d4\u00d5\7w\2\2\u00d5\u00d6\7r\2\2\u00d6:\3\2\2\2\u00d7\u00d8\7"+
		"d\2\2\u00d8\u00d9\7{\2\2\u00d9<\3\2\2\2\u00da\u00db\7e\2\2\u00db\u00dc"+
		"\7c\2\2\u00dc\u00dd\7u\2\2\u00dd\u00de\7g\2\2\u00de>\3\2\2\2\u00df\u00e0"+
		"\7y\2\2\u00e0\u00e1\7j\2\2\u00e1\u00e2\7g\2\2\u00e2\u00e3\7p\2\2\u00e3"+
		"@\3\2\2\2\u00e4\u00e5\7v\2\2\u00e5\u00e6\7j\2\2\u00e6\u00e7\7g\2\2\u00e7"+
		"\u00e8\7p\2\2\u00e8B\3\2\2\2\u00e9\u00ea\7g\2\2\u00ea\u00eb\7n\2\2\u00eb"+
		"\u00ec\7u\2\2\u00ec\u00ed\7g\2\2\u00edD\3\2\2\2\u00ee\u00ef\7g\2\2\u00ef"+
		"\u00f0\7p\2\2\u00f0\u00f1\7f\2\2\u00f1F\3\2\2\2\u00f2\u00f3\7k\2\2\u00f3"+
		"\u00f4\7p\2\2\u00f4\u00f5\7p\2\2\u00f5\u00f6\7g\2\2\u00f6\u00f7\7t\2\2"+
		"\u00f7H\3\2\2\2\u00f8\u00f9\7q\2\2\u00f9\u00fa\7w\2\2\u00fa\u00fb\7v\2"+
		"\2\u00fb\u00fc\7g\2\2\u00fc\u00fd\7t\2\2\u00fdJ\3\2\2\2\u00fe\u00ff\7"+
		"e\2\2\u00ff\u0100\7t\2\2\u0100\u0101\7q\2\2\u0101\u0102\7u\2\2\u0102\u0103"+
		"\7u\2\2\u0103L\3\2\2\2\u0104\u0105\7n\2\2\u0105\u0106\7g\2\2\u0106\u0107"+
		"\7h\2\2\u0107\u0108\7v\2\2\u0108N\3\2\2\2\u0109\u010a\7t\2\2\u010a\u010b"+
		"\7k\2\2\u010b\u010c\7i\2\2\u010c\u010d\7j\2\2\u010d\u010e\7v\2\2\u010e"+
		"P\3\2\2\2\u010f\u0110\7h\2\2\u0110\u0111\7w\2\2\u0111\u0112\7n\2\2\u0112"+
		"\u0113\7n\2\2\u0113R\3\2\2\2\u0114\u0115\7q\2\2\u0115\u0116\7p\2\2\u0116"+
		"T\3\2\2\2\u0117\u0118\7v\2\2\u0118\u0119\7t\2\2\u0119\u011a\7w\2\2\u011a"+
		"\u0121\7g\2\2\u011b\u011c\7h\2\2\u011c\u011d\7c\2\2\u011d\u011e\7n\2\2"+
		"\u011e\u011f\7u\2\2\u011f\u0121\7g\2\2\u0120\u0117\3\2\2\2\u0120\u011b"+
		"\3\2\2\2\u0121V\3\2\2\2\u0122\u0126\t\2\2\2\u0123\u0125\t\3\2\2\u0124"+
		"\u0123\3\2\2\2\u0125\u0128\3\2\2\2\u0126\u0124\3\2\2\2\u0126\u0127\3\2"+
		"\2\2\u0127X\3\2\2\2\u0128\u0126\3\2\2\2\u0129\u012b\4\62;\2\u012a\u0129"+
		"\3\2\2\2\u012b\u012c\3\2\2\2\u012c\u012a\3\2\2\2\u012c\u012d\3\2\2\2\u012d"+
		"Z\3\2\2\2\u012e\u0130\4\62;\2\u012f\u012e\3\2\2\2\u0130\u0131\3\2\2\2"+
		"\u0131\u012f\3\2\2\2\u0131\u0132\3\2\2\2\u0132\u0133\3\2\2\2\u0133\u0137"+
		"\7\60\2\2\u0134\u0136\4\62;\2\u0135\u0134\3\2\2\2\u0136\u0139\3\2\2\2"+
		"\u0137\u0135\3\2\2\2\u0137\u0138\3\2\2\2\u0138\u013b\3\2\2\2\u0139\u0137"+
		"\3\2\2\2\u013a\u013c\5a\61\2\u013b\u013a\3\2\2\2\u013b\u013c\3\2\2\2\u013c"+
		"\u014d\3\2\2\2\u013d\u013f\7\60\2\2\u013e\u0140\4\62;\2\u013f\u013e\3"+
		"\2\2\2\u0140\u0141\3\2\2\2\u0141\u013f\3\2\2\2\u0141\u0142\3\2\2\2\u0142"+
		"\u0144\3\2\2\2\u0143\u0145\5a\61\2\u0144\u0143\3\2\2\2\u0144\u0145\3\2"+
		"\2\2\u0145\u014d\3\2\2\2\u0146\u0148\4\62;\2\u0147\u0146\3\2\2\2\u0148"+
		"\u0149\3\2\2\2\u0149\u0147\3\2\2\2\u0149\u014a\3\2\2\2\u014a\u014b\3\2"+
		"\2\2\u014b\u014d\5a\61\2\u014c\u012f\3\2\2\2\u014c\u013d\3\2\2\2\u014c"+
		"\u0147\3\2\2\2\u014d\\\3\2\2\2\u014e\u0153\7$\2\2\u014f\u0152\5e\63\2"+
		"\u0150\u0152\n\4\2\2\u0151\u014f\3\2\2\2\u0151\u0150\3\2\2\2\u0152\u0155"+
		"\3\2\2\2\u0153\u0151\3\2\2\2\u0153\u0154\3\2\2\2\u0154\u0156\3\2\2\2\u0155"+
		"\u0153\3\2\2\2\u0156\u0161\7$\2\2\u0157\u015c\7)\2\2\u0158\u015b\5e\63"+
		"\2\u0159\u015b\n\5\2\2\u015a\u0158\3\2\2\2\u015a\u0159\3\2\2\2\u015b\u015e"+
		"\3\2\2\2\u015c\u015a\3\2\2\2\u015c\u015d\3\2\2\2\u015d\u015f\3\2\2\2\u015e"+
		"\u015c\3\2\2\2\u015f\u0161\7)\2\2\u0160\u014e\3\2\2\2\u0160\u0157\3\2"+
		"\2\2\u0161^\3\2\2\2\u0162\u0164\t\6\2\2\u0163\u0162\3\2\2\2\u0164\u0165"+
		"\3\2\2\2\u0165\u0163\3\2\2\2\u0165\u0166\3\2\2\2\u0166\u0167\3\2\2\2\u0167"+
		"\u0168\b\60\2\2\u0168`\3\2\2\2\u0169\u016b\t\7\2\2\u016a\u016c\t\b\2\2"+
		"\u016b\u016a\3\2\2\2\u016b\u016c\3\2\2\2\u016c\u016e\3\2\2\2\u016d\u016f"+
		"\4\62;\2\u016e\u016d\3\2\2\2\u016f\u0170\3\2\2\2\u0170\u016e\3\2\2\2\u0170"+
		"\u0171\3\2\2\2\u0171b\3\2\2\2\u0172\u0173\t\t\2\2\u0173d\3\2\2\2\u0174"+
		"\u0175\7^\2\2\u0175\u0179\t\n\2\2\u0176\u0179\5i\65\2\u0177\u0179\5g\64"+
		"\2\u0178\u0174\3\2\2\2\u0178\u0176\3\2\2\2\u0178\u0177\3\2\2\2\u0179f"+
		"\3\2\2\2\u017a\u017b\7^\2\2\u017b\u017c\4\62\65\2\u017c\u017d\4\629\2"+
		"\u017d\u0184\4\629\2\u017e\u017f\7^\2\2\u017f\u0180\4\629\2\u0180\u0184"+
		"\4\629\2\u0181\u0182\7^\2\2\u0182\u0184\4\629\2\u0183\u017a\3\2\2\2\u0183"+
		"\u017e\3\2\2\2\u0183\u0181\3\2\2\2\u0184h\3\2\2\2\u0185\u0186\7^\2\2\u0186"+
		"\u0187\7w\2\2\u0187\u0188\5c\62\2\u0188\u0189\5c\62\2\u0189\u018a\5c\62"+
		"\2\u018a\u018b\5c\62\2\u018bj\3\2\2\2\32\2\u00a0\u00a8\u00b2\u0120\u0126"+
		"\u012c\u0131\u0137\u013b\u0141\u0144\u0149\u014c\u0151\u0153\u015a\u015c"+
		"\u0160\u0165\u016b\u0170\u0178\u0183";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}