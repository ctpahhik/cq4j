// Generated from BaseSql.g4 by ANTLR 4.1
package com.github.ctpahhik.cq4j.grammar.generated;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class BaseSqlLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		PLUS=1, MINUS=2, MULT=3, DIV=4, MOD=5, AND=6, OR=7, AS=8, BETWEEN=9, NOT=10, 
		NULL=11, IN=12, IS=13, L_PAREN=14, R_PAREN=15, COMA=16, LT_EQ=17, LT=18, 
		GT_EQ=19, GT=20, EQ=21, NOT_EQ=22, SELECT=23, FROM=24, JOIN=25, WHERE=26, 
		ORDER_BY=27, GROUP_BY=28, CASE=29, WHEN=30, THEN=31, ELSE=32, END=33, 
		BOOLEAN=34, ID=35, INT=36, FLOAT=37, STRING=38, WS=39;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'+'", "'-'", "'*'", "'/'", "'%'", "'and'", "'or'", "'as'", "'between'", 
		"'not'", "'null'", "'in'", "'is'", "'('", "')'", "','", "LT_EQ", "'<'", 
		"GT_EQ", "'>'", "'='", "NOT_EQ", "'select'", "'from'", "'join'", "'where'", 
		"ORDER_BY", "GROUP_BY", "'case'", "'when'", "'then'", "'else'", "'end'", 
		"BOOLEAN", "ID", "INT", "FLOAT", "STRING", "WS"
	};
	public static final String[] ruleNames = {
		"PLUS", "MINUS", "MULT", "DIV", "MOD", "AND", "OR", "AS", "BETWEEN", "NOT", 
		"NULL", "IN", "IS", "L_PAREN", "R_PAREN", "COMA", "LT_EQ", "LT", "GT_EQ", 
		"GT", "EQ", "NOT_EQ", "SELECT", "FROM", "JOIN", "WHERE", "ORDER_BY", "GROUP_BY", 
		"CASE", "WHEN", "THEN", "ELSE", "END", "BOOLEAN", "ID", "INT", "FLOAT", 
		"STRING", "WS", "EXPONENT", "HEX_DIGIT", "ESC_SEQ", "OCTAL_ESC", "UNICODE_ESC"
	};


	public BaseSqlLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "BaseSql.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 38: WS_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\3\uacf5\uee8c\u4f5d\u8b0d\u4a45\u78bd\u1b2f\u3378\2)\u015a\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\b"+
		"\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3"+
		"\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\20\3\20"+
		"\3\21\3\21\3\22\3\22\3\22\3\22\5\22\u0091\n\22\3\23\3\23\3\24\3\24\3\24"+
		"\3\24\5\24\u0099\n\24\3\25\3\25\3\26\3\26\3\27\3\27\3\27\3\27\5\27\u00a3"+
		"\n\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\32"+
		"\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34"+
		"\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35"+
		"\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3!\3"+
		"!\3!\3!\3!\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\5#\u00ef\n#\3$\3"+
		"$\7$\u00f3\n$\f$\16$\u00f6\13$\3%\6%\u00f9\n%\r%\16%\u00fa\3&\6&\u00fe"+
		"\n&\r&\16&\u00ff\3&\3&\7&\u0104\n&\f&\16&\u0107\13&\3&\5&\u010a\n&\3&"+
		"\3&\6&\u010e\n&\r&\16&\u010f\3&\5&\u0113\n&\3&\6&\u0116\n&\r&\16&\u0117"+
		"\3&\5&\u011b\n&\3\'\3\'\3\'\7\'\u0120\n\'\f\'\16\'\u0123\13\'\3\'\3\'"+
		"\3\'\3\'\7\'\u0129\n\'\f\'\16\'\u012c\13\'\3\'\5\'\u012f\n\'\3(\6(\u0132"+
		"\n(\r(\16(\u0133\3(\3(\3)\3)\5)\u013a\n)\3)\6)\u013d\n)\r)\16)\u013e\3"+
		"*\3*\3+\3+\3+\3+\5+\u0147\n+\3,\3,\3,\3,\3,\3,\3,\3,\3,\5,\u0152\n,\3"+
		"-\3-\3-\3-\3-\3-\3-\2.\3\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21"+
		"\n\1\23\13\1\25\f\1\27\r\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1"+
		"%\24\1\'\25\1)\26\1+\27\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\1"+
		"9\36\1;\37\1= \1?!\1A\"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\2Q\2\1S\2\1U\2\1"+
		"W\2\1Y\2\1\3\2\13\5\2C\\aac|\6\2\62;C\\aac|\4\2$$^^\4\2))^^\5\2\13\f\17"+
		"\17\"\"\4\2GGgg\4\2--//\5\2\62;CHch\n\2$$))^^ddhhppttvv\u016e\2\3\3\2"+
		"\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17"+
		"\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2"+
		"\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3"+
		"\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3"+
		"\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2"+
		"=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3"+
		"\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\3[\3\2\2\2\5]\3\2\2\2\7_\3\2\2"+
		"\2\ta\3\2\2\2\13c\3\2\2\2\re\3\2\2\2\17i\3\2\2\2\21l\3\2\2\2\23o\3\2\2"+
		"\2\25w\3\2\2\2\27{\3\2\2\2\31\u0080\3\2\2\2\33\u0083\3\2\2\2\35\u0086"+
		"\3\2\2\2\37\u0088\3\2\2\2!\u008a\3\2\2\2#\u0090\3\2\2\2%\u0092\3\2\2\2"+
		"\'\u0098\3\2\2\2)\u009a\3\2\2\2+\u009c\3\2\2\2-\u00a2\3\2\2\2/\u00a4\3"+
		"\2\2\2\61\u00ab\3\2\2\2\63\u00b0\3\2\2\2\65\u00b5\3\2\2\2\67\u00bb\3\2"+
		"\2\29\u00c4\3\2\2\2;\u00cd\3\2\2\2=\u00d2\3\2\2\2?\u00d7\3\2\2\2A\u00dc"+
		"\3\2\2\2C\u00e1\3\2\2\2E\u00ee\3\2\2\2G\u00f0\3\2\2\2I\u00f8\3\2\2\2K"+
		"\u011a\3\2\2\2M\u012e\3\2\2\2O\u0131\3\2\2\2Q\u0137\3\2\2\2S\u0140\3\2"+
		"\2\2U\u0146\3\2\2\2W\u0151\3\2\2\2Y\u0153\3\2\2\2[\\\7-\2\2\\\4\3\2\2"+
		"\2]^\7/\2\2^\6\3\2\2\2_`\7,\2\2`\b\3\2\2\2ab\7\61\2\2b\n\3\2\2\2cd\7\'"+
		"\2\2d\f\3\2\2\2ef\7c\2\2fg\7p\2\2gh\7f\2\2h\16\3\2\2\2ij\7q\2\2jk\7t\2"+
		"\2k\20\3\2\2\2lm\7c\2\2mn\7u\2\2n\22\3\2\2\2op\7d\2\2pq\7g\2\2qr\7v\2"+
		"\2rs\7y\2\2st\7g\2\2tu\7g\2\2uv\7p\2\2v\24\3\2\2\2wx\7p\2\2xy\7q\2\2y"+
		"z\7v\2\2z\26\3\2\2\2{|\7p\2\2|}\7w\2\2}~\7n\2\2~\177\7n\2\2\177\30\3\2"+
		"\2\2\u0080\u0081\7k\2\2\u0081\u0082\7p\2\2\u0082\32\3\2\2\2\u0083\u0084"+
		"\7k\2\2\u0084\u0085\7u\2\2\u0085\34\3\2\2\2\u0086\u0087\7*\2\2\u0087\36"+
		"\3\2\2\2\u0088\u0089\7+\2\2\u0089 \3\2\2\2\u008a\u008b\7.\2\2\u008b\""+
		"\3\2\2\2\u008c\u008d\7>\2\2\u008d\u0091\7?\2\2\u008e\u008f\7#\2\2\u008f"+
		"\u0091\7@\2\2\u0090\u008c\3\2\2\2\u0090\u008e\3\2\2\2\u0091$\3\2\2\2\u0092"+
		"\u0093\7>\2\2\u0093&\3\2\2\2\u0094\u0095\7@\2\2\u0095\u0099\7?\2\2\u0096"+
		"\u0097\7#\2\2\u0097\u0099\7>\2\2\u0098\u0094\3\2\2\2\u0098\u0096\3\2\2"+
		"\2\u0099(\3\2\2\2\u009a\u009b\7@\2\2\u009b*\3\2\2\2\u009c\u009d\7?\2\2"+
		"\u009d,\3\2\2\2\u009e\u009f\7#\2\2\u009f\u00a3\7?\2\2\u00a0\u00a1\7>\2"+
		"\2\u00a1\u00a3\7@\2\2\u00a2\u009e\3\2\2\2\u00a2\u00a0\3\2\2\2\u00a3.\3"+
		"\2\2\2\u00a4\u00a5\7u\2\2\u00a5\u00a6\7g\2\2\u00a6\u00a7\7n\2\2\u00a7"+
		"\u00a8\7g\2\2\u00a8\u00a9\7e\2\2\u00a9\u00aa\7v\2\2\u00aa\60\3\2\2\2\u00ab"+
		"\u00ac\7h\2\2\u00ac\u00ad\7t\2\2\u00ad\u00ae\7q\2\2\u00ae\u00af\7o\2\2"+
		"\u00af\62\3\2\2\2\u00b0\u00b1\7l\2\2\u00b1\u00b2\7q\2\2\u00b2\u00b3\7"+
		"k\2\2\u00b3\u00b4\7p\2\2\u00b4\64\3\2\2\2\u00b5\u00b6\7y\2\2\u00b6\u00b7"+
		"\7j\2\2\u00b7\u00b8\7g\2\2\u00b8\u00b9\7t\2\2\u00b9\u00ba\7g\2\2\u00ba"+
		"\66\3\2\2\2\u00bb\u00bc\7q\2\2\u00bc\u00bd\7t\2\2\u00bd\u00be\7f\2\2\u00be"+
		"\u00bf\7g\2\2\u00bf\u00c0\7t\2\2\u00c0\u00c1\3\2\2\2\u00c1\u00c2\7d\2"+
		"\2\u00c2\u00c3\7{\2\2\u00c38\3\2\2\2\u00c4\u00c5\7i\2\2\u00c5\u00c6\7"+
		"t\2\2\u00c6\u00c7\7q\2\2\u00c7\u00c8\7w\2\2\u00c8\u00c9\7r\2\2\u00c9\u00ca"+
		"\3\2\2\2\u00ca\u00cb\7d\2\2\u00cb\u00cc\7{\2\2\u00cc:\3\2\2\2\u00cd\u00ce"+
		"\7e\2\2\u00ce\u00cf\7c\2\2\u00cf\u00d0\7u\2\2\u00d0\u00d1\7g\2\2\u00d1"+
		"<\3\2\2\2\u00d2\u00d3\7y\2\2\u00d3\u00d4\7j\2\2\u00d4\u00d5\7g\2\2\u00d5"+
		"\u00d6\7p\2\2\u00d6>\3\2\2\2\u00d7\u00d8\7v\2\2\u00d8\u00d9\7j\2\2\u00d9"+
		"\u00da\7g\2\2\u00da\u00db\7p\2\2\u00db@\3\2\2\2\u00dc\u00dd\7g\2\2\u00dd"+
		"\u00de\7n\2\2\u00de\u00df\7u\2\2\u00df\u00e0\7g\2\2\u00e0B\3\2\2\2\u00e1"+
		"\u00e2\7g\2\2\u00e2\u00e3\7p\2\2\u00e3\u00e4\7f\2\2\u00e4D\3\2\2\2\u00e5"+
		"\u00e6\7v\2\2\u00e6\u00e7\7t\2\2\u00e7\u00e8\7w\2\2\u00e8\u00ef\7g\2\2"+
		"\u00e9\u00ea\7h\2\2\u00ea\u00eb\7c\2\2\u00eb\u00ec\7n\2\2\u00ec\u00ed"+
		"\7u\2\2\u00ed\u00ef\7g\2\2\u00ee\u00e5\3\2\2\2\u00ee\u00e9\3\2\2\2\u00ef"+
		"F\3\2\2\2\u00f0\u00f4\t\2\2\2\u00f1\u00f3\t\3\2\2\u00f2\u00f1\3\2\2\2"+
		"\u00f3\u00f6\3\2\2\2\u00f4\u00f2\3\2\2\2\u00f4\u00f5\3\2\2\2\u00f5H\3"+
		"\2\2\2\u00f6\u00f4\3\2\2\2\u00f7\u00f9\4\62;\2\u00f8\u00f7\3\2\2\2\u00f9"+
		"\u00fa\3\2\2\2\u00fa\u00f8\3\2\2\2\u00fa\u00fb\3\2\2\2\u00fbJ\3\2\2\2"+
		"\u00fc\u00fe\4\62;\2\u00fd\u00fc\3\2\2\2\u00fe\u00ff\3\2\2\2\u00ff\u00fd"+
		"\3\2\2\2\u00ff\u0100\3\2\2\2\u0100\u0101\3\2\2\2\u0101\u0105\7\60\2\2"+
		"\u0102\u0104\4\62;\2\u0103\u0102\3\2\2\2\u0104\u0107\3\2\2\2\u0105\u0103"+
		"\3\2\2\2\u0105\u0106\3\2\2\2\u0106\u0109\3\2\2\2\u0107\u0105\3\2\2\2\u0108"+
		"\u010a\5Q)\2\u0109\u0108\3\2\2\2\u0109\u010a\3\2\2\2\u010a\u011b\3\2\2"+
		"\2\u010b\u010d\7\60\2\2\u010c\u010e\4\62;\2\u010d\u010c\3\2\2\2\u010e"+
		"\u010f\3\2\2\2\u010f\u010d\3\2\2\2\u010f\u0110\3\2\2\2\u0110\u0112\3\2"+
		"\2\2\u0111\u0113\5Q)\2\u0112\u0111\3\2\2\2\u0112\u0113\3\2\2\2\u0113\u011b"+
		"\3\2\2\2\u0114\u0116\4\62;\2\u0115\u0114\3\2\2\2\u0116\u0117\3\2\2\2\u0117"+
		"\u0115\3\2\2\2\u0117\u0118\3\2\2\2\u0118\u0119\3\2\2\2\u0119\u011b\5Q"+
		")\2\u011a\u00fd\3\2\2\2\u011a\u010b\3\2\2\2\u011a\u0115\3\2\2\2\u011b"+
		"L\3\2\2\2\u011c\u0121\7$\2\2\u011d\u0120\5U+\2\u011e\u0120\n\4\2\2\u011f"+
		"\u011d\3\2\2\2\u011f\u011e\3\2\2\2\u0120\u0123\3\2\2\2\u0121\u011f\3\2"+
		"\2\2\u0121\u0122\3\2\2\2\u0122\u0124\3\2\2\2\u0123\u0121\3\2\2\2\u0124"+
		"\u012f\7$\2\2\u0125\u012a\7)\2\2\u0126\u0129\5U+\2\u0127\u0129\n\5\2\2"+
		"\u0128\u0126\3\2\2\2\u0128\u0127\3\2\2\2\u0129\u012c\3\2\2\2\u012a\u0128"+
		"\3\2\2\2\u012a\u012b\3\2\2\2\u012b\u012d\3\2\2\2\u012c\u012a\3\2\2\2\u012d"+
		"\u012f\7)\2\2\u012e\u011c\3\2\2\2\u012e\u0125\3\2\2\2\u012fN\3\2\2\2\u0130"+
		"\u0132\t\6\2\2\u0131\u0130\3\2\2\2\u0132\u0133\3\2\2\2\u0133\u0131\3\2"+
		"\2\2\u0133\u0134\3\2\2\2\u0134\u0135\3\2\2\2\u0135\u0136\b(\2\2\u0136"+
		"P\3\2\2\2\u0137\u0139\t\7\2\2\u0138\u013a\t\b\2\2\u0139\u0138\3\2\2\2"+
		"\u0139\u013a\3\2\2\2\u013a\u013c\3\2\2\2\u013b\u013d\4\62;\2\u013c\u013b"+
		"\3\2\2\2\u013d\u013e\3\2\2\2\u013e\u013c\3\2\2\2\u013e\u013f\3\2\2\2\u013f"+
		"R\3\2\2\2\u0140\u0141\t\t\2\2\u0141T\3\2\2\2\u0142\u0143\7^\2\2\u0143"+
		"\u0147\t\n\2\2\u0144\u0147\5Y-\2\u0145\u0147\5W,\2\u0146\u0142\3\2\2\2"+
		"\u0146\u0144\3\2\2\2\u0146\u0145\3\2\2\2\u0147V\3\2\2\2\u0148\u0149\7"+
		"^\2\2\u0149\u014a\4\62\65\2\u014a\u014b\4\629\2\u014b\u0152\4\629\2\u014c"+
		"\u014d\7^\2\2\u014d\u014e\4\629\2\u014e\u0152\4\629\2\u014f\u0150\7^\2"+
		"\2\u0150\u0152\4\629\2\u0151\u0148\3\2\2\2\u0151\u014c\3\2\2\2\u0151\u014f"+
		"\3\2\2\2\u0152X\3\2\2\2\u0153\u0154\7^\2\2\u0154\u0155\7w\2\2\u0155\u0156"+
		"\5S*\2\u0156\u0157\5S*\2\u0157\u0158\5S*\2\u0158\u0159\5S*\2\u0159Z\3"+
		"\2\2\2\32\2\u0090\u0098\u00a2\u00ee\u00f4\u00fa\u00ff\u0105\u0109\u010f"+
		"\u0112\u0117\u011a\u011f\u0121\u0128\u012a\u012e\u0133\u0139\u013e\u0146"+
		"\u0151";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}